<%- include("../../views/partials/user/header") %>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <!-- Swiper CSS -->
    <link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css">


    <style>
        .copy-btn {
            background-color: transparent;
            /* Green */
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
            margin-left: 10px;
            font-size: 14px;
            transition: background-color 0.3s;
        }

        .copy-btn:hover {
            background-color: #45a049;
            /* Darker green */
        }

        .error-message {
            color: red;
        }
    </style>

    <main class="main">
        <div class="page-header breadcrumb-wrap">
            <div class="container">
                <div class="breadcrumb">
                    <a href="/" rel="nofollow">Home</a>
                    <span></span> Shop
                    <span></span> Checkout
                </div>
            </div>
        </div>
        <br>

        <section class="mt-50 mb-50">

            <!-- coupon portion -->
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="toggle_info">
                            <span><i class="fi-rs-label mr-10"></i><span class="text-muted">Available coupons.</span> <a
                                    href="#coupon" data-bs-toggle="collapse" class="collapsed"
                                    aria-expanded="false">Click here to choose your code</a></span>
                        </div>
                        <div class="panel-collapse collapse coupon_form " id="coupon">

                            <div class="col-12">
                                <div class=" mt-50 mb-50"></div>
                            </div>

                            <section class="banners mb-15" id="">
                                <div class="container">
                                    <div class="row">
                                        <% // Predefined list of images const
                                            imagess=[ "assets/imgs/banner/coup-1.jpg"
                                            , "assets/imgs/banner/coup-4.jpg" , "assets/imgs/banner/coup-3.jpg"
                                            , "assets/imgs/banner/coup-2.jpg" ]; %>

                                            <% for (let i=0; i < coupon.length; i++) { %>
                                                <div class="col-lg-4 col-md-6">
                                                    <div class="banner-img wow fadeIn animated">
                                                        <!-- Dynamically assign images using modulus operator -->
                                                        <img src="<%= imagess[i % imagess.length] %>"
                                                            alt="Coupon Image">
                                                        <div class="banner-text">
                                                            <span style="color: rgb(248, 247, 246);">Exclusive Coupon</span>
                                                            <h4>
                                                                <span style="color: rgb(136, 206, 244);">Save </span>
                                                                <span style="color: rgb(70, 213, 14);">
                                                                    <%= coupon[i].offerPrice %>
                                                                </span>
                                                                <span style="color: aliceblue;">on every minimum
                                                                    Purchase at</span>
                                                                <span style="color: rgb(240, 41, 6);">
                                                                    <%= coupon[i].minimumPrice %>
                                                                </span>
                                                            </h4>
                                                            <span style="color: rgb(121, 141, 148);">COUPON CODE:</span>
                                                            <strong style="color: white;" id="couponCode-<%= i %>">
                                                                <%= coupon[i].name %>
                                                            </strong>
                                                            <button class="copy-btn"
                                                                onclick="copyCouponCode('<%= coupon[i].name %>')">
                                                                Copy
                                                            </button>
                                                            <br>
                                                            <span style="color: bisque;">Expires On:</span>
                                                            <strong style="color: white;">
                                                                <%= new Date(coupon[i].expireOn).toLocaleDateString() %>
                                                            </strong>
                                                        </div>
                                                    </div>
                                                </div>
                                                <% } %>
                                    </div>
                                </div>
                            </section>

                        </div>
                    </div>
                </div>
            </div>

            <form method="POST" id="orderForm" action="/placeOrder" onsubmit="return placeOrder(event)">
                <div class="container">


                    <div class="row">
                        <div class="col-12">
                            <div class="divider mt-50 mb-50"></div>
                        </div>
                    </div>

                    <div class="row">
                        <!-- Billing Details -->
                        <div class="col-md-6">
                            <div class="mb-25">
                                <h4>Billing Details</h4>
                            </div>
                            <div class="form-group">
                                <input type="text" name="fname" id="fname" placeholder="First Name *">
                                <div id="fname-error" class="error-message"></div>
                            </div>
                            <div class="form-group">
                                <input type="text" name="lname" id="lname" placeholder="Last Name *">
                                <div id="lname-error" class="error-message"></div>
                            </div>

                            <!-- address details -->
                            <div class="form-group col-md-12">
                                <a href="/addAddress?redirectTo=checkout" class="btn btn-link"
                                    style="text-decoration: none;">
                                    Add Address
                                </a>

                            </div>

                            <!-- Add Address Button -->
                            <!-- <div class="form-group col-md-12">
                                <a href="#" class="btn btn-link" data-bs-toggle="modal" data-bs-target="#addressModal" style="text-decoration: none;">
                                    Add Address
                                </a>
                            </div> -->

                            <!-- Modal for Adding Address -->
                            <!-- <div class="modal fade" id="addressModal" tabindex="-1" aria-labelledby="addressModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content" style="background-color: rgba(0, 128, 0, 0.7); color: white;">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="addressModalLabel">Add Address</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <form id="addAddressForm" novalidate>
                                                <div class="mb-3">
                                                    <label for="addressType" class="form-label">Address Type</label>
                                                    <select class="form-select" id="addressType" required>
                                                        <option value="">Select Address Type</option>
                                                        <option value="Home">Home</option>
                                                        <option value="Office">Office</option>
                                                    </select>
                                                    <div class="error-message text-danger" id="addressTypeError"></div>
                                                </div>
                            
                                                <div class="mb-3">
                                                    <label for="name" class="form-label">Name</label>
                                                    <input type="text" class="form-control" id="name" required>
                                                    <div class="error-message text-danger" id="nameError"></div>
                                                </div>
                            
                                                <div class="mb-3">
                                                    <label for="city" class="form-label">City</label>
                                                    <input type="text" class="form-control" id="city" required>
                                                    <div class="error-message text-danger" id="cityError"></div>
                                                </div>
                            
                                                <div class="mb-3">
                                                    <label for="landMark" class="form-label">Landmark</label>
                                                    <input type="text" class="form-control" id="landMark">
                                                </div>
                            
                                                <div class="mb-3">
                                                    <label for="state" class="form-label">State</label>
                                                    <input type="text" class="form-control" id="state" required>
                                                    <div class="error-message text-danger" id="stateError"></div>
                                                </div>
                            
                                                <div class="mb-3">
                                                    <label for="pincode" class="form-label">Pincode</label>
                                                    <input type="text" class="form-control" id="pincode" pattern="^\d{6}$" required>
                                                    <div class="error-message text-danger" id="pincodeError"></div>
                                                </div>
                            
                                                <div class="mb-3">
                                                    <label for="phone" class="form-label">Phone</label>
                                                    <input type="tel" class="form-control" id="phone" pattern="^\d{10}$" required>
                                                    <div class="error-message text-danger" id="phoneError"></div>
                                                </div>
                            
                                                <div class="mb-3">
                                                    <label for="altPhone" class="form-label">Alternate Phone</label>
                                                    <input type="tel" class="form-control" id="altPhone" pattern="^\d{10}$">
                                                    <div class="error-message text-danger" id="altPhoneError"></div>
                                                </div>
                            
                                                <button type="button" class="btn btn-primary" id="saveAddressBtn">Save Address</button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div> -->



                            <% if (addresses && addresses.length> 0) { %>
                                <h5>Select Shipping Address:</h5>
                                <% addresses.forEach((addr, index)=> { %>
                                    <div class="address-option">
                                        <input style="height: 20px;" type="radio" name="selectedAddress"
                                            id="address-<%= index %>" value="<%= addr._id %>" <%=index===0 ? 'checked'
                                            : '' %>>
                                        <label for="address-<%= index %>">
                                            <p><strong>Address Type:</strong>
                                                <%= addr.addressType %>
                                            </p>
                                            <p><strong>Name:</strong>
                                                <%= addr.name %>
                                            </p>
                                            <p><strong>City:</strong>
                                                <%= addr.city %>
                                            </p>
                                            <p><strong>Landmark:</strong>
                                                <%= addr.landMark %>
                                            </p>
                                            <p><strong>State:</strong>
                                                <%= addr.state %>
                                            </p>
                                            <p><strong>Postal Code:</strong>
                                                <%= addr.pincode %>
                                            </p>
                                            <p><strong>Phone:</strong>
                                                <%= addr.phone %>
                                            </p>
                                            <p><strong>Alt Phone:</strong>
                                                <%= addr.altPhone %>
                                            </p>
                                        </label>
                                        <hr>
                                    </div>
                                    <% }); %>
                                        <% } else { %>
                                            <p>No addresses found. Please update your profile with a shipping address.
                                            </p>
                                            <% } %>
                        </div>

                        <!-- Order Summary -->
                        <div class="col-md-6">
                            <div class="mb-20">
                                <h4>Your Orders</h4>
                            </div>
                            <div class="table-responsive order_table">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th colspan="2">Product</th>
                                            <th>Total</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% if (cart.length> 0) { %>
                                            <% cart.forEach(item=> { %>
                                                <tr>
                                                    <td class="image product-thumbnail">
                                                        <img src="/uploads/re-image/<%= item.productId.productImage[0] %>"
                                                            alt="#">
                                                    </td>
                                                    <td>
                                                        <h5>
                                                            <%= item.productId.productName %>
                                                        </h5>
                                                        <span class="product-qty">Qty: <%= item.quantity %></span>
                                                    </td>
                                                    <td>
                                                        <%= Math.floor(item.totalPrice) %>
                                                    </td>
                                                </tr>
                                                <% }); %>
                                                    <% } else { %>
                                                        <tr>
                                                            <td colspan="3">Oops... No items found in your cart!</td>
                                                        </tr>
                                                        <% } %>
                                                            <tr>
                                                                <th>Subtotal</th>
                                                                <td colspan="2">
                                                                    <%= Math.floor(subTotal.toFixed(2)) %>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <th>Shipping</th>
                                                                <td colspan="2" id="shippingCharge">0.00</td>
                                                            </tr>
                                                            <tr>
                                                                <th>Discount</th>
                                                                <td colspan="2" id="couponDiscount">0.00</td>
                                                            </tr>
                                                            <tr>
                                                                <th>Total</th>
                                                                <td colspan="2" id="totalAmount"
                                                                    class="font-xl text-brand fw-900">
                                                                    <%= Math.floor(total.toFixed(2)) %>
                                                                </td>
                                                            </tr>
                                    </tbody>
                                </table>
                            </div>

                            <!-- coupon apply -->
                            <div class="mb-30 mt-50">
                                <div class="heading_s1 mb-3">
                                    <h4>Apply Coupon</h4>
                                </div>
                                <div class="total-amount">
                                    <div class="left">
                                        <div class="coupon">
                                            <!-- <form action="#" target="_blank"> -->
                                            <div class="form-row row justify-content-center">
                                                <div class="form-group col-lg-6">
                                                    <input class="font-medium" name="couponCode" id="couponCode"
                                                        placeholder="Enter Your Coupon Code Here..">
                                                </div>
                                                <div class="form-group col-lg-6">
                                                    <button class="btn  btn-sm" id="couponButton"><i
                                                            class="fi-rs-label mr-10"></i>
                                                        Apply
                                                    </button>
                                                    <button class="btn btn-sm" id="RemoveCoupon" style="display: none;">
                                                        Remove Coupon
                                                    </button>
                                                </div>
                                            </div>
                                            <!-- </form> -->
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Delivery Options -->
                            <h5>Delivery Options</h5>
                            <div class="delivery_option">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="deliveryMethod"
                                        id="regularDelivery" value="regular" checked>
                                    <label class="form-check-label" for="regularDelivery">Regular Delivery (Free
                                        Shipping)</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="deliveryMethod" id="fastDelivery"
                                        value="fast">
                                    <label class="form-check-label" for="fastDelivery">Fast Delivery (+80.00)</label>
                                </div>
                            </div>

                            <br>

                            <!-- Payment Methods -->
                            <h5>Payment</h5>
                            <div class="payment_option">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="paymentMethod" id="wallet"
                                        value="wallet">
                                    <label class="form-check-label" for="wallet">Wallet</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="paymentMethod" id="cod"
                                        value="COD" checked>
                                    <label class="form-check-label" for="cod">Cash on Delivery</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="paymentMethod" id="razorPay"
                                        value="Online">
                                    <label class="form-check-label" for="razorPay">Razor Pay</label>
                                </div>
                            </div>
                            <br>

                            <button type="submit" id="placeOrderButton" class="btn btn-fill-out btn-block mt-30">Place
                                Order</button>
                        </div>
                    </div>
                </div>
            </form>
        </section>

        <!-- coupon section -->
        <!-- <section class="banners mb-15">
                <div class="container">
                    <div class="row">
                        <% 
                            // Predefined list of images
                            const images = [
                                "assets/imgs/banner/coupon-4.webp",
                                "assets/imgs/banner/coupon-2.webp",
                                "assets/imgs/banner/coupon-3.webp",
                                "assets/imgs/banner/frame-3.png"
                            ];
                        %>
            
                        <% for (let i = 0; i < coupon.length; i++) { %>
                            <div class="col-lg-4 col-md-6"> 
                                <div class="banner-img wow fadeIn animated">
                                    <img src="<%= images[i % images.length] %>" alt="Coupon Image">
                                    <div class="banner-text">
                                        <span>Exclusive Coupon</span>
                                        <h4>
                                            <span style="color: rgb(136, 206, 244);">Save </span>
                                            <span style="color: rgb(70, 213, 14);"><%= coupon[i].offerPrice %></span> 
                                            <span style="color: aliceblue;">on every minimum Purchase at</span> 
                                            <span style="color: rgb(240, 41, 6);"><%= coupon[i].minimumPrice %></span>
                                        </h4>
                                        <span>COUPON CODE:</span>
                                        <strong style="color: white;" id="couponCode-<%= i %>"><%= coupon[i].name %></strong>
                                        <button 
                                            class="copy-btn" 
                                            onclick="copyCouponCode('<%= coupon[i].name %>')">
                                            Copy
                                        </button>
                                        <br>
                                        <span>Expires On:</span>
                                        <strong style="color: white;"><%= new Date(coupon[i].expireOn).toLocaleDateString() %></strong>
                                    </div>
                                </div>
                            </div>
                        <% } %> 
                    </div>
                </div>
            </section> -->

    </main>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <!-- Swiper JS -->
    <script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>

    <%- include("../../views/partials/user/footer") %>


        <script>

            let discount = 0; // Tracks the applied discount
            let deliveryCharge = 0; // Tracks the selected delivery charge
            const subTotal = parseFloat(<%= subTotal.toFixed(2) %>); // Initial subtotal 
            let currentTotal = subTotal; // Tracks the dynamically updated total

            // coupon function
            document.getElementById("couponButton").addEventListener("click", async (event) => {
                event.preventDefault();

                const couponCode = document.getElementById("couponCode").value.trim();

                if (!couponCode) {
                    Swal.fire({
                        title: "Error",
                        text: "Please Enter A valid Coupon Code.",
                        icon: "error"
                    });
                    return;
                }

                try {
                    const response = await fetch("/verifyCoupon", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({ couponCode, subTotal })
                    });

                    const data = await response.json();

                    if (data.success) {
                        discount = data.discount;
                        document.getElementById("couponDiscount").textContent = `${discount.toFixed(2)}`
                        currentTotal = subTotal - discount + deliveryCharge; // Update current total
                        updateTotalDisplay();

                        Swal.fire({
                            title: "Success.",
                            text: "Coupon added Successfully",
                            icon: "success"
                        });

                        document.getElementById("couponButton").style.display = "none"
                        document.getElementById("RemoveCoupon").style.display = "inline-Block"
                    } else {
                        Swal.fire({
                            title: "Error..!",
                            text: data.message,
                            icon: "error"
                        });
                    }
                } catch (error) {
                    console.error("Error in adding coupon code", error);
                    Swal.fire({
                        title: "Error.!",
                        text: "An error occurred while adding the coupon. Please try again later.",
                        icon: "error"
                    });
                }
            });

            // Remove Coupon function

            document.getElementById("RemoveCoupon").addEventListener("click", async (event) => {
                event.preventDefault()

                discount = 0
                document.getElementById("couponDiscount").textContent = "0.00"
                currentTotal = subTotal + deliveryCharge
                updateTotalDisplay()
                console.log("sub value ", subTotal);
                console.log("del charge ", deliveryCharge)

                document.getElementById("RemoveCoupon").style.display = "none"
                document.getElementById("couponButton").style.display = "inline-Block"
                document.getElementById("couponCode").value = " "


                Swal.fire({
                    title: "Success",
                    text: "Coupon Removed Successfully",
                    icon: "success"
                })
            })

            // Place order function
            async function placeOrder(event) {
                if (event) {
                    event.preventDefault();
                }

                // validate form
                if (!formValidate()) {
                    return false; // Stop the process if validation fails
                }

                try {
                    //const selectedAddress = document.querySelector("input[name='selectedAddress']:checked").value;
                    const paymentMethod = document.querySelector("input[name='paymentMethod']:checked").value;
                    const deliveryMethod = document.querySelector("input[name='deliveryMethod']:checked").value;
                    const couponCode = discount > 0 ? document.getElementById("couponCode").value.trim() : "";

                    const selectedAddressElement = document.querySelector("input[name='selectedAddress']:checked");
                    if (!selectedAddressElement) {
                        Swal.fire("Error", "Please add a shipping address", "info");
                        return false;
                    }

                    const selectedAddress = selectedAddressElement.value;
                    const paymentMethodElement = document.querySelector("input[name='paymentMethod']:checked");
                    if (!paymentMethodElement) {
                        Swal.fire("Error", "Please select a payment method", "error");
                        return false;
                    }


                    // placing order using RazorPay
                    if (paymentMethod === "Online") {

                        const response = await fetch("/placeOrderRazorPay", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify({ totalAmount: currentTotal })
                        })

                        const data = await response.json();
                        console.log("data:", data)

                        if (data.success) {
                            const { orderId, amount, currency, key } = data;

                            const options = {
                                key,
                                amount,
                                currency,
                                name: "Frame Fury",
                                description: "Order Payment",
                                order_id: orderId,
                                handler: async function (response) {
                                    console.log("rz response ", response)

                                    const paymentId = response.razorpay_payment_id
                                    const razorpaySignature = response.razorpay_signature
                                    const orderId = response.razorpay_order_id

                                    // send to the backend to verify the order
                                    const verifyResponse = await fetch("/verifyRazorPayOrder", {
                                        method: "POST",
                                        headers: {
                                            "Content-Type": "application/json"
                                        },
                                        body: JSON.stringify({
                                            selectedAddress, paymentMethod, deliveryMethod, couponCode,
                                            orderId,
                                            paymentId,
                                            razorpaySignature
                                        })
                                    })

                                    const verifyData = await verifyResponse.json()
                                    console.log("verify:", verifyData)
                                    if (verifyData.success) {

                                        window.location.href = `/orderSuccess?orderId=${verifyData.orderId}`;
                                    }
                                    else {
                                        Swal.fire({
                                            icon: "error",
                                            title: "Payment Failed",
                                            text: "Payment verification failed. Please try again.",
                                            confirmButtonText: "OK",
                                        });
                                    }
                                },
                                modal: {
                                    ondismiss: async function () {
                                        console.log("Payment  Failed");

                                        // Log the failed order to the backend
                                        const cancelResponse = await fetch("/verifyRazorPayOrder", {
                                            method: "POST",
                                            headers: {
                                                "Content-Type": "application/json"
                                            },
                                            body: JSON.stringify({
                                                selectedAddress,
                                                paymentMethod,
                                                deliveryMethod,
                                                couponCode,
                                                orderId,
                                                paymentId: null,
                                                razorpaySignature: null,
                                                paymentStatus: "Failed" // Mark as failed
                                            })
                                        });

                                        const cancelData = await cancelResponse.json();
                                        console.log("Cancel Response:", cancelData);

                                         window.location.href = `/oderFailure?orderId=${cancelData.orderId}`;
                                    }
                                },
                                theme: { color: "#3399cc" },
                            }

                            const rzp = new Razorpay(options);
                            rzp.open()
                        }
                        else {
                            Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: data.message,
                                confirmButtonText: "OK",
                            });
                        }
                    }
                    // placing order using COD
                    else if (paymentMethod === "COD") {

                        console.log("sel", selectedAddress)
                        console.log("sel", paymentMethod)
                        console.log("sel", deliveryMethod)
                        console.log("sel", couponCode)
                        console.log("sel", currentTotal)


                        const response = await fetch("/placeOrder", {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({ selectedAddress, paymentMethod, deliveryMethod, couponCode, totalAmount: currentTotal }),
                        });

                        const data = await response.json();
                        console.log("data:cod", data)

                        if (data.success) {
                            window.location.href = `/orderSuccess?orderId=${data.orderId}`;
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Order Placing Failed",
                                text: data.message,
                                confirmButtonText: "OK",
                            });
                        }
                    }

                    // order placing using Wallet
                    else if (paymentMethod === "wallet") {

                        const response = await fetch("/placeOrderWallet", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify({
                                selectedAddress,
                                paymentMethod,
                                deliveryMethod,
                                couponCode,
                                totalAmount: currentTotal
                            })
                        })

                        console.log("sel", selectedAddress)
                        console.log("sel", paymentMethod)
                        console.log("sel", deliveryMethod)
                        console.log("sel", couponCode)
                        console.log("sel", currentTotal)

                        const data = await response.json()
                        if (data.success) {
                            window.location.href = `/orderSuccess?orderId=${data.orderId}`;
                        } else {
                            Swal.fire({
                                title: "Error.",
                                text: data.message,
                                icon: "error",
                                confirmButtonText: "OK"
                            })
                        }
                    }

                } catch (error) {
                    console.error("Error Placing Order", error);
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "An error occurred while placing the order. Please try again later.",
                        confirmButtonText: "OK",
                    });
                }
            }

            // Update total at delivery method changes
            document.addEventListener("DOMContentLoaded", function () {
                const deliveryOptions = document.querySelectorAll("input[name='deliveryMethod']");
                const shippingChargeElement = document.getElementById("shippingCharge");

                deliveryOptions.forEach(option => {
                    option.addEventListener("change", function () {
                        if (this.value === "fast") {
                            deliveryCharge = 80.00;
                        } else {
                            deliveryCharge = 0.00;
                        }

                        shippingChargeElement.textContent = deliveryCharge.toFixed(2);
                        currentTotal = Math.floor(subTotal - discount + deliveryCharge); // Recalculate total
                        updateTotalDisplay();
                    });
                });
            });

            // Function to update total display
            function updateTotalDisplay() {
                const totalAmountElement = document.getElementById("totalAmount");
                totalAmountElement.textContent = currentTotal.toFixed(2);
                console.log("Updated Total:", currentTotal);
            }
        </script>


        <!-- coupon code copy function -->
        <script>
            function copyCouponCode(code) {
                // Create a temporary input element to copy text
                const tempInput = document.createElement('input');
                tempInput.value = code;
                document.body.appendChild(tempInput);
                tempInput.select();
                tempInput.setSelectionRange(0, 99999); // For mobile devices
                document.execCommand('copy');
                document.body.removeChild(tempInput);

                Swal.fire({
                    title: "Coupon code copied",
                    text: "Code : " + code,
                    icon: "success",
                    showConfirmButton: false,
                    timer: 1000
                })
            }
        </script>


        <script>

            function formValidate() {
                clearErrorMessage();
                const firstName = document.getElementById("fname").value;
                const lastName = document.getElementById("lname").value;

                const namePattern = /^[A-Za-z\s]+$/;
                let isValid = true;

                if (firstName === "") {
                    ErrorMessage("fname-error", "First name is required.");
                    isValid = false;
                } else if (!namePattern.test(firstName)) {
                    ErrorMessage("fname-error", "First name can only contain alphabetic letters.");
                    isValid = false;
                }

                if (lastName === "") {
                    ErrorMessage("lname-error", "Last name is required.");
                    isValid = false;
                } else if (!namePattern.test(lastName)) {
                    ErrorMessage("lname-error", "Last name can only contain alphabetic letters.");
                    isValid = false;
                }

                return isValid;
            }


            function ErrorMessage(nameId, message) {
                let errorElement = document.getElementById(nameId)
                errorElement.innerText = message;
                errorElement.style.display = "block"
            }

            function clearErrorMessage() {
                const errorElements = document.getElementsByClassName("error-message")
                Array.from(errorElements).forEach((element) => {
                    element.innerText = "";
                    element.style.display = "block"
                })
            }

        </script>

        <script>
            document.getElementById('saveAddressBtn').addEventListener('click', async function () {
                let isValid = true;

                // Clear any existing error messages
                document.querySelectorAll('.error-message').forEach(el => el.textContent = '');

                // Get form values
                const addressType = document.getElementById('addressType').value;
                const name = document.getElementById('name').value;
                const city = document.getElementById('city').value;
                const landMark = document.getElementById('landMark').value;
                const state = document.getElementById('state').value;
                const pincode = document.getElementById('pincode').value;
                const phone = document.getElementById('phone').value;
                const altPhone = document.getElementById('altPhone').value;

                // Validate form fields
                if (!addressType) {
                    isValid = false;
                    document.getElementById('addressTypeError').textContent = 'Select address type.';
                }
                if (!name.trim()) {
                    isValid = false;
                    document.getElementById('nameError').textContent = 'Enter your name.';
                }
                if (!city.trim()) {
                    isValid = false;
                    document.getElementById('cityError').textContent = 'Enter your city.';
                }
                if (!state.trim()) {
                    isValid = false;
                    document.getElementById('stateError').textContent = 'Enter your state.';
                }
                if (!pincode.match(/^\d{6}$/)) {
                    isValid = false;
                    document.getElementById('pincodeError').textContent = 'Pincode must be 6 digits.';
                }
                if (!phone.match(/^\d{10}$/)) {
                    isValid = false;
                    document.getElementById('phoneError').textContent = 'Phone must be 10 digits.';
                }

                // If form is valid, send the data
                if (isValid) {
                    const data = {
                        addressType,
                        name,
                        city,
                        landMark,
                        state,
                        pincode,
                        phone,
                        altPhone
                    };

                    const redirectTo = 'userProfile'; // Or 'checkout', depending on where you want to redirect after success
                    try {
                        const response = await fetch('/addAddress?redirectTo=' + redirectTo, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(data)
                        });

                        if (response.ok) {
                            // Success - Show SweetAlert
                            Swal.fire({
                                icon: 'success',
                                title: 'Success!',
                                text: 'Address added successfully!',
                                confirmButtonText: 'OK'
                            }).then(() => {
                                // Reset the form and close the modal
                                document.getElementById('addAddressForm').reset();
                                const modal = bootstrap.Modal.getInstance(document.getElementById('addressModal'));
                                modal.hide();
                            });
                        } else {
                            // Error - Show SweetAlert
                            Swal.fire({
                                icon: 'error',
                                title: 'Error!',
                                text: 'An error occurred while adding the address.',
                                confirmButtonText: 'OK'
                            });
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        // Show SweetAlert for error
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: 'An error occurred while adding the address.',
                            confirmButtonText: 'OK'
                        });
                    }
                }
            });
        </script>